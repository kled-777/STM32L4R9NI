<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32L4R9I_DISCOVERY\STM32L4R9I_DISCOVERY.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32L4R9I_DISCOVERY\STM32L4R9I_DISCOVERY.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Jul 05 23:16:29 2022
<BR><P>
<H3>Maximum Stack Usage =       1496 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
FrontendApplicationBase::gotoWatchScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; WatchView::WatchView() &rArr; WatchViewBase::WatchViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[49]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[31]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">BusFault_Handler</a><BR>
 <LI><a href="#[2f]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">HardFault_Handler</a><BR>
 <LI><a href="#[30]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">MemManage_Handler</a><BR>
 <LI><a href="#[be]">StartDefaultTask</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[be]">StartDefaultTask</a><BR>
 <LI><a href="#[32]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">UsageFault_Handler</a><BR>
 <LI><a href="#[2b5]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b5]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[2d4]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d4]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[49]">ADC1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[31]">BusFault_Handler</a> from stm32l4xx_it.o(i.BusFault_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[4b]">CAN1_RX0_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[4c]">CAN1_RX1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[4d]">CAN1_SCE_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[4a]">CAN1_TX_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[76]">COMP_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[87]">CRS_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[8a]">DCMI_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[73]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[74]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[75]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[61]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[42]">DMA1_Channel1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[43]">DMA1_Channel2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[44]">DMA1_Channel3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[45]">DMA1_Channel4_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[46]">DMA1_Channel5_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[47]">DMA1_Channel6_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[48]">DMA1_Channel7_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[8b]">DMA2D_IRQHandler</a> from stm32l4xx_it.o(i.DMA2D_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[6e]">DMA2_Channel1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[6f]">DMA2_Channel2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[70]">DMA2_Channel3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[71]">DMA2_Channel4_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[72]">DMA2_Channel5_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[7a]">DMA2_Channel6_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[7b]">DMA2_Channel7_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[8f]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[84]">DSI_IRQHandler</a> from stm32l4xx_it.o(i.DSI_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[34]">DebugMon_Handler</a> from stm32l4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[3d]">EXTI0_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[5f]">EXTI15_10_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[3e]">EXTI1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[3f]">EXTI2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[40]">EXTI3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[41]">EXTI4_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[4e]">EXTI9_5_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[3b]">FLASH_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[66]">FMC_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[86]">FPU_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[8e]">GFXMMU_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[2f]">HardFault_Handler</a> from stm32l4xx_it.o(i.HardFault_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[57]">I2C1_ER_IRQHandler</a> from stm32l4xx_it.o(i.I2C1_ER_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[56]">I2C1_EV_IRQHandler</a> from stm32l4xx_it.o(i.I2C1_EV_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[59]">I2C2_ER_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[58]">I2C2_EV_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[7f]">I2C3_ER_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[7e]">I2C3_EV_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[88]">I2C4_ER_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[89]">I2C4_EV_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[93]">I2C_DMAAbort</a> from stm32l4xx_hal_i2c.o(i.I2C_DMAAbort) referenced from stm32l4xx_hal_i2c.o(i.I2C_ITError)
 <LI><a href="#[94]">I2C_Slave_ISR_IT</a> from stm32l4xx_hal_i2c.o(i.I2C_Slave_ISR_IT) referenced from stm32l4xx_hal_i2c.o(i.I2C_ITError)
 <LI><a href="#[c2]">IdleTaskHook</a> from touchgfxhal.o(i.IdleTaskHook) referenced from freertos.o(i.vApplicationIdleHook)
 <LI><a href="#[77]">LPTIM1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[78]">LPTIM2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[7c]">LPUART1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[8d]">LTDC_ER_IRQHandler</a> from stm32l4xx_it.o(i.LTDC_ER_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[8c]">LTDC_IRQHandler</a> from stm32l4xx_it.o(i.LTDC_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[30]">MemManage_Handler</a> from stm32l4xx_it.o(i.MemManage_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[2e]">NMI_Handler</a> from stm32l4xx_it.o(i.NMI_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[7d]">OCTOSPI1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[82]">OCTOSPI2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[79]">OTG_FS_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[38]">PVD_PVM_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[35]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[3c]">RCC_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[85]">RNG_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[60]">RTC_Alarm_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[3a]">RTC_WKUP_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[2d]">Reset_Handler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[80]">SAI1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[81]">SAI2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[67]">SDMMC1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[5a]">SPI1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[5b]">SPI2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[69]">SPI3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[33]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[be]">StartDefaultTask</a> from main.o(i.StartDefaultTask) referenced from main.o(i.main)
 <LI><a href="#[36]">SysTick_Handler</a> from cmsis_os2.o(i.SysTick_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[91]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l4r9xx.o(.text)
 <LI><a href="#[39]">TAMP_STAMP_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[4f]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[52]">TIM1_CC_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[51]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[50]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[53]">TIM2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[54]">TIM3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[55]">TIM4_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[68]">TIM5_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[6c]">TIM6_DAC_IRQHandler</a> from stm32l4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[6d]">TIM7_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[62]">TIM8_BRK_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[65]">TIM8_CC_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[64]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[63]">TIM8_UP_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[83]">TSC_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[bf]">TouchGFX_Task</a> from app_touchgfx.o(i.TouchGFX_Task) referenced from main.o(i.main)
 <LI><a href="#[6a]">UART4_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[6b]">UART5_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[5c]">USART1_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[5d]">USART2_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[5e]">USART3_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[32]">UsageFault_Handler</a> from stm32l4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[37]">WWDG_IRQHandler</a> from startup_stm32l4r9xx.o(.text) referenced from startup_stm32l4r9xx.o(RESET)
 <LI><a href="#[97]">DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</a> from stm32dma.o(i._Z22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef) referenced from stm32dma.o(i._ZN8STM32DMA10initializeEv)
 <LI><a href="#[e3]">TouchGFXHAL::beginFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c7]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[da]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c9]">TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[db]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e5]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d9]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[dc]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[dd]">TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e4]">TouchGFXHAL::endFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bd]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bd]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[c1]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[c1]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(i.touchgfx_init)
 <LI><a href="#[ed]">WatchViewBase::setupScreen()</a> from watchviewbase.o(i._ZN13WatchViewBase11setupScreenEv) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[eb]">WatchViewBase::~WatchViewBase()</a> from watchviewbase.o(i._ZN13WatchViewBaseD1Ev) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[f6]">WatchPresenter::deactivate()</a> from watchpresenter.o(i._ZN14WatchPresenter10deactivateEv) referenced from watchpresenter.o(.constdata__ZTV14WatchPresenter)
 <LI><a href="#[f5]">WatchPresenter::activate()</a> from watchpresenter.o(i._ZN14WatchPresenter8activateEv) referenced from watchpresenter.o(.constdata__ZTV14WatchPresenter)
 <LI><a href="#[f7]">WatchPresenter::~WatchPresenter()</a> from watchpresenter.o(i._ZN14WatchPresenterD1Ev) referenced from watchpresenter.o(.constdata__ZTV14WatchPresenter)
 <LI><a href="#[fc]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[102]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[101]">STM32TouchController::init()</a> from stm32touchcontroller.o(i._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[b9]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[b9]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[cf]">TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bc]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider_1.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[bc]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[c5]">FrontendApplicationBase::gotoWatchScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoWatchScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[104]">FrontendApplicationBase::~FrontendApplicationBase()</a> from touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[108]">STM32DMA::initialize()</a> from stm32dma.o(i._ZN8STM32DMA10initializeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[105]">STM32DMA::getBlitCaps()</a> from stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[10e]">STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[10f]">STM32DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[10a]">STM32DMA::signalDMAInterrupt()</a> from stm32dma.o(i._ZN8STM32DMA18signalDMAInterruptEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[ba]">STM32DMA::~STM32DMA()</a> from stm32dma.o(i._ZN8STM32DMAD1Ev) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[ba]">STM32DMA::~STM32DMA()</a> from stm32dma.o(i._ZN8STM32DMAD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[13b]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[13c]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[13a]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[139]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[129]">touchgfx::AnalogClock::updateClock()</a> from analogclock.o(i._ZN8touchgfx11AnalogClock11updateClockEv) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[131]">touchgfx::AnalogClock::setAnimation(unsigned short, short(*)(unsigned short, short, short, unsigned short))</a> from analogclock.o(i._ZN8touchgfx11AnalogClock12setAnimationEtPFstsstE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[12a]">touchgfx::AnalogClock::setBackground(unsigned short, short, short)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock13setBackgroundEtss) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[12c]">touchgfx::AnalogClock::setupHourHand(unsigned short, short, short)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock13setupHourHandEtss) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[12d]">touchgfx::AnalogClock::setupMinuteHand(unsigned short, short, short)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock15setupMinuteHandEtss) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[12e]">touchgfx::AnalogClock::setupSecondHand(unsigned short, short, short)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock15setupSecondHandEtss) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[12b]">touchgfx::AnalogClock::setRotationCenter(short, short)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock17setRotationCenterEss) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[132]">touchgfx::AnalogClock::initializeTime24Hour(unsigned char, unsigned char, unsigned char)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock20initializeTime24HourEhhh) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[12f]">touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock27setHourHandMinuteCorrectionEb) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[130]">touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock29setMinuteHandSecondCorrectionEb) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[133]">touchgfx::AnalogClock::setupHand(touchgfx::TextureMapper&, unsigned short, short, short)</a> from analogclock.o(i._ZN8touchgfx11AnalogClock9setupHandERNS_13TextureMapperEtss) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[fb]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[fb]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[fb]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[fb]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[ff]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[ff]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[ff]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ff]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[f9]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f9]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f9]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f9]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[103]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[103]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[103]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[fe]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[fe]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[fe]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[fe]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[f8]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f8]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f8]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f8]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[fa]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[fa]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[fa]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[fa]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[136]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[100]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[100]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[100]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[100]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[138]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[137]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[128]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[128]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[106]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[110]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[111]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[10d]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[10c]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[112]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[107]">touchgfx::DMA_Interface::flush()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[109]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[10b]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[95]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont_1.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from generatedfont_1.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[95]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont_1.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_10_4bpp_1.o(i._Z23getFont_verdana_10_4bppv)
 <LI><a href="#[95]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont_1.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_20_4bpp_1.o(i._Z23getFont_verdana_20_4bppv)
 <LI><a href="#[95]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont_1.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_40_4bpp_1.o(i._Z23getFont_verdana_40_4bppv)
 <LI><a href="#[149]">touchgfx::TextureMapper::updateScale(float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper11updateScaleEf) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[149]">touchgfx::TextureMapper::updateScale(float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper11updateScaleEf) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[146]">touchgfx::TextureMapper::updateAngles(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper12updateAnglesEfff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[146]">touchgfx::TextureMapper::updateAngles(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper12updateAnglesEfff) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[147]">touchgfx::TextureMapper::updateZAngle(float)</a> from analogclock.o(i._ZN8touchgfx13TextureMapper12updateZAngleEf) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[147]">touchgfx::TextureMapper::updateZAngle(float)</a> from analogclock.o(i._ZN8touchgfx13TextureMapper12updateZAngleEf) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[150]">touchgfx::TextureMapper::setBitmapPosition(float, float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[150]">touchgfx::TextureMapper::setBitmapPosition(float, float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEff) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[151]">touchgfx::TextureMapper::setBitmapPosition(int, int)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEii) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[151]">touchgfx::TextureMapper::setBitmapPosition(int, int)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEii) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[14e]">touchgfx::TextureMapper::setCameraDistance(float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setCameraDistanceEf) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[14e]">touchgfx::TextureMapper::setCameraDistance(float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setCameraDistanceEf) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[144]">touchgfx::TextureMapper::setRenderingAlgorithm(touchgfx::TextureMapper::RenderingAlgorithm)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[144]">touchgfx::TextureMapper::setRenderingAlgorithm(touchgfx::TextureMapper::RenderingAlgorithm)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[14a]">touchgfx::TextureMapper::setOrigo(float, float, float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper8setOrigoEfff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[14a]">touchgfx::TextureMapper::setOrigo(float, float, float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper8setOrigoEfff) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[148]">touchgfx::TextureMapper::setScale(float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper8setScaleEf) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[148]">touchgfx::TextureMapper::setScale(float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper8setScaleEf) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[145]">touchgfx::TextureMapper::setAngles(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setAnglesEfff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[145]">touchgfx::TextureMapper::setAngles(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setAnglesEfff) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[143]">touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[143]">touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[14d]">touchgfx::TextureMapper::setCamera(float, float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper9setCameraEff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[14d]">touchgfx::TextureMapper::setCamera(float, float)</a> from animationtexturemapper.o(i._ZN8touchgfx13TextureMapper9setCameraEff) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[fd]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[fd]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[fd]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[96]">touchgfx::EasingEquations::cubicEaseInOut(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst) referenced from watchviewbase.o(i._ZN13WatchViewBaseC1Ev)
 <LI><a href="#[99]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from analogclock.o(i._ZN8touchgfx11AnalogClockC1Ev)
 <LI><a href="#[152]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[155]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[156]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[157]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[154]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[153]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[160]">touchgfx::MCUInstrumentation::getCCConsumed()</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv) referenced from cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[161]">touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj) referenced from cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[15a]">touchgfx::AnimationTextureMapper::setupAnimation(touchgfx::AnimationTextureMapper::AnimationParameter, float, unsigned short, unsigned short, short(*)(unsigned short, short, short, unsigned short))</a> from animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[15b]">touchgfx::AnimationTextureMapper::startAnimation()</a> from animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper14startAnimationEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[158]">touchgfx::AnimationTextureMapper::handleTickEvent()</a> from animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper15handleTickEventEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[15c]">touchgfx::AnimationTextureMapper::cancelAnimationTextureMapperAnimation()</a> from animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[15e]">touchgfx::CortexMMCUInstrumentation::getCPUCycles()</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv) referenced from cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[15f]">touchgfx::CortexMMCUInstrumentation::setMCUActive(bool)</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb) referenced from cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[15d]">touchgfx::CortexMMCUInstrumentation::init()</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentation4initEv) referenced from cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[b8]">touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation()</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentationD1Ev) referenced from cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[b8]">touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation()</a> from cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentationD1Ev) referenced from touchgfxhal.o(i.__sti___15_TouchGFXHAL_cpp_c3b64dc6)
 <LI><a href="#[ea]">touchgfx::HAL::FlushCache()</a> from hal.o(i._ZN8touchgfx3HAL10FlushCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ea]">touchgfx::HAL::FlushCache()</a> from hal.o(i._ZN8touchgfx3HAL10FlushCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[168]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[164]">touchgfx::HAL::initialize()</a> from hal.o(i._ZN8touchgfx3HAL10initializeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d0]">touchgfx::HAL::getBlitCaps()</a> from hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d0]">touchgfx::HAL::getBlitCaps()</a> from hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e9]">touchgfx::HAL::InvalidateCache()</a> from hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e9]">touchgfx::HAL::InvalidateCache()</a> from hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d8]">touchgfx::HAL::backPorchExited()</a> from hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d8]">touchgfx::HAL::backPorchExited()</a> from hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cc]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cc]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d4]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d4]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[165]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ca]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ca]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e1]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e1]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cd]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cd]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[de]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[de]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d7]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d7]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c6]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c6]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[df]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[df]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[167]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e8]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e8]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e2]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e2]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e6]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e6]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e7]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e7]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d1]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d1]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d3]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d3]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d2]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d2]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d6]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d6]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d5]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d5]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[169]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cb]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cb]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[166]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e0]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e0]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c8]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c8]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[193]">touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(i._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[195]">touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(i._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[192]">touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(i._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[9a]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv)
 <LI><a href="#[9a]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(i._ZN8touchgfx11ApplicationC1Ev)
 <LI><a href="#[16c]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[98]">touchgfx::BlitOp::BlitOp()</a> from stm32dma.o(i._ZN8touchgfx6BlitOpC1Ev) referenced from stm32dma.o(i._ZN8STM32DMAC1Ev)
 <LI><a href="#[9b]">touchgfx::Point4::Point4()</a> from texturemapper.o(i._ZN8touchgfx6Point4C1Ev) referenced from texturemapper.o(i._ZN8touchgfx13TextureMapper19applyTransformationEv)
 <LI><a href="#[16e]">touchgfx::Screen::setupScreen()</a> from screen.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[f4]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ef]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[ef]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[ee]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[f1]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f3]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[f3]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[f3]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[f0]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[f2]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from watchviewbase.o(.constdata__ZTV13WatchViewBase)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[ec]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[16d]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[141]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[141]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[141]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[141]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[141]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16f]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[142]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[142]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[142]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[142]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[142]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[142]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[122]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[123]">touchgfx::Drawable::handleTickEvent()</a> from analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[120]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[121]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[11c]">touchgfx::Drawable::setX(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[11d]">touchgfx::Drawable::setY(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[11e]">touchgfx::Drawable::setWidth(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[11f]">touchgfx::Drawable::setHeight(short)</a> from analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[190]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[18d]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[194]">touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[171]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[9c]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[9c]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[172]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[9d]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[9d]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[173]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[9e]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[9e]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[174]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[9f]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[9f]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[175]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[a8]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[a8]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[176]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a9]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a9]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[177]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[a2]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[a2]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[178]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[a4]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[a4]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[179]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[b0]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[b0]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[17a]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[a0]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[a0]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[17b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a3]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a3]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[17c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[17d]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[b1]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[b1]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[17e]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[b4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[b4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[17f]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a1]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a1]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[180]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[a6]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[a6]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[181]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[b5]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[b5]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[182]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[ac]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[ac]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[183]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[ae]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[ae]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[184]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[b6]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[b6]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[185]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a7]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[a7]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[186]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[aa]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[aa]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[187]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ad]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ad]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[188]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[af]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[af]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[189]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[b7]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[b7]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[18a]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ab]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[ab]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[18b]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[b2]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[b2]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[18c]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[b3]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[b3]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[18e]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[18f]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[bb]">touchgfx::LCD16bpp::~LCD16bpp()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[bb]">touchgfx::LCD16bpp::~LCD16bpp()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[119]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[119]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[119]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[124]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[124]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[124]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[127]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[127]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[127]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[125]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[125]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[125]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[126]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[126]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[126]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[196]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[197]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[198]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[199]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[19a]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[19b]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[114]">WatchView::setupScreen()</a> from watchview.o(i._ZN9WatchView11setupScreenEv) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[115]">WatchView::tearDownScreen()</a> from watchview.o(i._ZN9WatchView14tearDownScreenEv) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[113]">WatchView::~WatchView()</a> from watchview.o(i._ZN9WatchViewD1Ev) referenced from watchview.o(.constdata__ZTV9WatchView)
 <LI><a href="#[ce]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[135]">touchgfx::AnalogClock::animationEnabled() const</a> from analogclock.o(i._ZNK8touchgfx11AnalogClock16animationEnabledEv) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[134]">touchgfx::AnalogClock::convertHandValueToAngle(unsigned char, unsigned char, unsigned char) const</a> from analogclock.o(i._ZNK8touchgfx11AnalogClock23convertHandValueToAngleEhhh) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[13f]">touchgfx::TextureMapper::getSolidRect() const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper12getSolidRectEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[13f]">touchgfx::TextureMapper::getSolidRect() const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper12getSolidRectEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[14f]">touchgfx::TextureMapper::getCameraDistance() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper17getCameraDistanceEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[14f]">touchgfx::TextureMapper::getCameraDistance() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper17getCameraDistanceEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[140]">touchgfx::TextureMapper::invalidateContent() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper17invalidateContentEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[140]">touchgfx::TextureMapper::invalidateContent() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper17invalidateContentEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[13e]">touchgfx::TextureMapper::draw(const touchgfx::Rect&) const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper4drawERKNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[13e]">touchgfx::TextureMapper::draw(const touchgfx::Rect&) const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper4drawERKNS_4RectE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[14b]">touchgfx::TextureMapper::getOrigoX() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper9getOrigoXEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[14b]">touchgfx::TextureMapper::getOrigoX() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper9getOrigoXEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[14c]">touchgfx::TextureMapper::getOrigoY() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper9getOrigoYEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[14c]">touchgfx::TextureMapper::getOrigoY() const</a> from animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper9getOrigoYEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[159]">touchgfx::AnimationTextureMapper::isTextureMapperAnimationRunning() const</a> from animationtexturemapper.o(i._ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[163]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[162]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[16b]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[16a]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[170]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[11a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[118]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[11b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[191]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[117]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[117]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[117]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[116]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
 <LI><a href="#[116]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[116]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from texts_1.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[13d]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[92]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l4r9xx.o(.text)
 <LI><a href="#[19f]">__sti___15_Application_cpp_63cd8d44</a> from application.o(i.__sti___15_Application_cpp_63cd8d44) referenced from application.o(.init_array)
 <LI><a href="#[19c]">__sti___15_TouchGFXHAL_cpp_c3b64dc6</a> from touchgfxhal.o(i.__sti___15_TouchGFXHAL_cpp_c3b64dc6) referenced from touchgfxhal.o(.init_array)
 <LI><a href="#[19e]">__sti___21_TypedTextDatabase_cpp_05ec7672</a> from typedtextdatabase_1.o(i.__sti___21_TypedTextDatabase_cpp_05ec7672) referenced from typedtextdatabase_1.o(.init_array)
 <LI><a href="#[19d]">__sti___25_TouchGFXConfiguration_cpp_f5abfd34</a> from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[1a0]">__sti___7_LCD_cpp_86507772</a> from lcd.o(i.__sti___7_LCD_cpp_86507772) referenced from lcd.o(.init_array)
 <LI><a href="#[23]">ft3x67_Init</a> from ft3x67.o(i.ft3x67_Init) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[24]">ft3x67_ReadID</a> from ft3x67.o(i.ft3x67_ReadID) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[25]">ft3x67_Reset</a> from ft3x67.o(i.ft3x67_Reset) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[2a]">ft3x67_TS_ClearIT</a> from ft3x67.o(i.ft3x67_TS_ClearIT) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[27]">ft3x67_TS_DetectTouch</a> from ft3x67.o(i.ft3x67_TS_DetectTouch) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[2c]">ft3x67_TS_DisableIT</a> from ft3x67.o(i.ft3x67_TS_DisableIT) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[29]">ft3x67_TS_EnableIT</a> from ft3x67.o(i.ft3x67_TS_EnableIT) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[28]">ft3x67_TS_GetXY</a> from ft3x67.o(i.ft3x67_TS_GetXY) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[2b]">ft3x67_TS_ITStatus</a> from ft3x67.o(i.ft3x67_TS_ITStatus) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[26]">ft3x67_TS_Start</a> from ft3x67.o(i.ft3x67_TS_Start) referenced 2 times from ft3x67.o(.data)
 <LI><a href="#[90]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[13]">mfxstm32l152_DeInit</a> from mfxstm32l152.o(i.mfxstm32l152_DeInit) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[1e]">mfxstm32l152_Error_ClearIT</a> from mfxstm32l152.o(i.mfxstm32l152_Error_ClearIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[20]">mfxstm32l152_Error_DisableIT</a> from mfxstm32l152.o(i.mfxstm32l152_Error_DisableIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[1d]">mfxstm32l152_Error_EnableIT</a> from mfxstm32l152.o(i.mfxstm32l152_Error_EnableIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[1f]">mfxstm32l152_Error_GetITStatus</a> from mfxstm32l152.o(i.mfxstm32l152_Error_GetITStatus) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[22]">mfxstm32l152_Error_ReadMsg</a> from mfxstm32l152.o(i.mfxstm32l152_Error_ReadMsg) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[21]">mfxstm32l152_Error_ReadSrc</a> from mfxstm32l152.o(i.mfxstm32l152_Error_ReadSrc) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[1a]">mfxstm32l152_IDD_ClearIT</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_ClearIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[17]">mfxstm32l152_IDD_Config</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_Config) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[1c]">mfxstm32l152_IDD_DisableIT</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_DisableIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[19]">mfxstm32l152_IDD_EnableIT</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_EnableIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[1b]">mfxstm32l152_IDD_GetITStatus</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_GetITStatus) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[18]">mfxstm32l152_IDD_GetValue</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_GetValue) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[16]">mfxstm32l152_IDD_Start</a> from mfxstm32l152.o(i.mfxstm32l152_IDD_Start) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[12]">mfxstm32l152_IO_ClearIT</a> from mfxstm32l152.o(i.mfxstm32l152_IO_ClearIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[c]">mfxstm32l152_IO_Config</a> from mfxstm32l152.o(i.mfxstm32l152_IO_Config) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[10]">mfxstm32l152_IO_DisableIT</a> from mfxstm32l152.o(i.mfxstm32l152_IO_DisableIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[f]">mfxstm32l152_IO_EnableIT</a> from mfxstm32l152.o(i.mfxstm32l152_IO_EnableIT) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[11]">mfxstm32l152_IO_ITStatus</a> from mfxstm32l152.o(i.mfxstm32l152_IO_ITStatus) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[e]">mfxstm32l152_IO_ReadPin</a> from mfxstm32l152.o(i.mfxstm32l152_IO_ReadPin) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[b]">mfxstm32l152_IO_Start</a> from mfxstm32l152.o(i.mfxstm32l152_IO_Start) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[d]">mfxstm32l152_IO_WritePin</a> from mfxstm32l152.o(i.mfxstm32l152_IO_WritePin) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[8]">mfxstm32l152_Init</a> from mfxstm32l152.o(i.mfxstm32l152_Init) referenced 4 times from mfxstm32l152.o(.data)
 <LI><a href="#[14]">mfxstm32l152_LowPower</a> from mfxstm32l152.o(i.mfxstm32l152_LowPower) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[9]">mfxstm32l152_ReadID</a> from mfxstm32l152.o(i.mfxstm32l152_ReadID) referenced 4 times from mfxstm32l152.o(.data)
 <LI><a href="#[a]">mfxstm32l152_Reset</a> from mfxstm32l152.o(i.mfxstm32l152_Reset) referenced 4 times from mfxstm32l152.o(.data)
 <LI><a href="#[15]">mfxstm32l152_WakeUp</a> from mfxstm32l152.o(i.mfxstm32l152_WakeUp) referenced 2 times from mfxstm32l152.o(.data)
 <LI><a href="#[c3]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[c0]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[c4]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[92]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(.text)
</UL>
<P><STRONG><a name="[380]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1a2]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1af]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[381]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1a4]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[382]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[383]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[384]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1a5]"></a>__rt_final_cpp$nonempty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_final_cpp$nonempty &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[385]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[33]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[375]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[374]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[35]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[36a]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[2d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>GFXMMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>OCTOSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>OCTOSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l4r9xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[349]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[1f3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[386]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[387]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[388]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1ca]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[389]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1a1]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[1ab]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_TouchGFXHAL_cpp_c3b64dc6
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[38a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_dtor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[316]"></a>__rt_SIGPVFN</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_signal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[1a6]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_final_cpp$nonempty
</UL>

<P><STRONG><a name="[1a3]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[38b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[38c]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_final.o(.text), UNUSED)

<P><STRONG><a name="[38d]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[38e]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>BSP_IO_ConfigPin</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l4r9i_discovery_io.o(i.BSP_IO_ConfigPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_IO_ConfigPin
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[1b4]"></a>BSP_IO_Init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32l4r9i_discovery_io.o(i.BSP_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP_IO_Init &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[237]"></a>BSP_IO_WritePin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4r9i_discovery_io.o(i.BSP_IO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[31]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[29c]"></a>CRC_Lock</STRONG> (Thumb, 152 bytes, Stack size 4 bytes, stm32_crc_lock.o(i.CRC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[8b]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>DSI_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DSI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DSI_IRQHandler &rArr; HAL_DSI_IRQHandler &rArr; HAL_DSI_TearingEffectCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[1ce]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
</UL>

<P><STRONG><a name="[1bb]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, stm32l4xx_hal_crc_ex.o(i.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[1b9]"></a>HAL_CRC_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32l4xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ba]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[1bd]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[235]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 174 bytes, Stack size 20 bytes, stm32l4xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[1b5]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, stm32l4xx_hal_dma2d.o(i.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32l4xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[1bc]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_dma2d.o(i.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[1bf]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[21d]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>

<P><STRONG><a name="[21c]"></a>HAL_DMA_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>

<P><STRONG><a name="[23f]"></a>HAL_DSI_ConfigAdaptedCommandMode</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ConfigAdaptedCommandMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigAdaptedCommandMode
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[23e]"></a>HAL_DSI_ConfigCommand</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ConfigCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DSI_ConfigCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[23d]"></a>HAL_DSI_ConfigErrorMonitor</STRONG> (Thumb, 200 bytes, Stack size 12 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ConfigErrorMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigErrorMonitor
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[23b]"></a>HAL_DSI_ConfigFlowControl</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ConfigFlowControl))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[239]"></a>HAL_DSI_ConfigHostTimeouts</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ConfigHostTimeouts))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DSI_ConfigHostTimeouts
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[23a]"></a>HAL_DSI_ConfigPhyTimer</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ConfigPhyTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigPhyTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[1c2]"></a>HAL_DSI_EndOfRefreshCallback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touchgfxhal.o(i.HAL_DSI_EndOfRefreshCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DSI_EndOfRefreshCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_IRQHandler
</UL>

<P><STRONG><a name="[1c5]"></a>HAL_DSI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_IRQHandler
</UL>

<P><STRONG><a name="[1b6]"></a>HAL_DSI_IRQHandler</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_DSI_IRQHandler &rArr; HAL_DSI_TearingEffectCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_EndOfRefreshCallback
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_IRQHandler
</UL>

<P><STRONG><a name="[1c6]"></a>HAL_DSI_Init</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = HAL_DSI_Init &rArr; HAL_DSI_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[1c8]"></a>HAL_DSI_LongWrite</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_LongWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_DSI_LongWrite &rArr; DSI_ConfigPacketHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ConfigPacketHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetUpdateRegion
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReqTear
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[1c7]"></a>HAL_DSI_MspInit</STRONG> (Thumb, 162 bytes, Stack size 256 bytes, stm32l4xx_hal_msp.o(i.HAL_DSI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = HAL_DSI_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetOscConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
</UL>

<P><STRONG><a name="[1d5]"></a>HAL_DSI_Refresh</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
</UL>

<P><STRONG><a name="[240]"></a>HAL_DSI_SetGenericVCID</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_SetGenericVCID))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[23c]"></a>HAL_DSI_SetLowPowerRXFilter</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_SetLowPowerRXFilter))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[1d0]"></a>HAL_DSI_ShortWrite</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_ShortWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_DSI_ShortWrite &rArr; DSI_ShortWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ShortWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReqTear
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[265]"></a>HAL_DSI_Start</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DSI_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>

<P><STRONG><a name="[264]"></a>HAL_DSI_Stop</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32l4xx_hal_dsi.o(i.HAL_DSI_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DSI_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>

<P><STRONG><a name="[1c4]"></a>HAL_DSI_TearingEffectCallback</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, touchgfxhal.o(i.HAL_DSI_TearingEffectCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_DSI_TearingEffectCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Refresh
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetUpdateRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_IRQHandler
</UL>

<P><STRONG><a name="[1b1]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IO_Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Wakeup
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPollingMemReady
</UL>

<P><STRONG><a name="[242]"></a>HAL_GFXMMU_ConfigLut</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32l4xx_hal_gfxmmu.o(i.HAL_GFXMMU_ConfigLut))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GFXMMU_ConfigLut
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GFXMMU_Init
</UL>

<P><STRONG><a name="[243]"></a>HAL_GFXMMU_DisableLutLines</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32l4xx_hal_gfxmmu.o(i.HAL_GFXMMU_DisableLutLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GFXMMU_DisableLutLines
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GFXMMU_Init
</UL>

<P><STRONG><a name="[1d6]"></a>HAL_GFXMMU_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32l4xx_hal_gfxmmu.o(i.HAL_GFXMMU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GFXMMU_Init &rArr; HAL_GFXMMU_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GFXMMU_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GFXMMU_Init
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_GFXMMU_MspInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_GFXMMU_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GFXMMU_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GFXMMU_Init
</UL>

<P><STRONG><a name="[1e7]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspDeInit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_DeInit
</UL>

<P><STRONG><a name="[1cf]"></a>HAL_GPIO_Init</STRONG> (Thumb, 552 bytes, Stack size 56 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ITConfig
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_EnableWakeupPin
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_DeInit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[2cb]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[2cc]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[232]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Wakeup
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[1b8]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Transmit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MemoryMapped
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_IsDeviceReady
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ShortWrite
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[246]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[247]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[227]"></a>HAL_I2C_AbortCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_AbortCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TreatErrorCallback
</UL>

<P><STRONG><a name="[21a]"></a>HAL_I2C_AddrCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_AddrCallback))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITAddrCplt
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_I2C_DeInit &rArr; HAL_I2C_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_DeInit
</UL>

<P><STRONG><a name="[1da]"></a>HAL_I2C_ER_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_I2C_ER_IRQHandler &rArr; I2C_ITError &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>

<P><STRONG><a name="[217]"></a>HAL_I2C_EV_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_EV_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>

<P><STRONG><a name="[226]"></a>HAL_I2C_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TreatErrorCallback
</UL>

<P><STRONG><a name="[1dc]"></a>HAL_I2C_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[1de]"></a>HAL_I2C_IsDeviceReady</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_IsDeviceReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_I2C_IsDeviceReady &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Init
</UL>

<P><STRONG><a name="[21f]"></a>HAL_I2C_ListenCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_ListenCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITListenCplt
</UL>

<P><STRONG><a name="[1e0]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 346 bytes, Stack size 64 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ReadMultiple
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_ReadMultiple
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>

<P><STRONG><a name="[1e4]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 340 bytes, Stack size 64 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>

<P><STRONG><a name="[1d9]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_I2C_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_DeInit
</UL>

<P><STRONG><a name="[1dd]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 184 bytes, Stack size 208 bytes, stm32l4xx_hal_msp.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[224]"></a>HAL_I2C_SlaveRxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_SlaveRxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveSeqCplt
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
</UL>

<P><STRONG><a name="[223]"></a>HAL_I2C_SlaveTxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_SlaveTxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveSeqCplt
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
</UL>

<P><STRONG><a name="[1ea]"></a>HAL_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ec]"></a>HAL_InitTick</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, stm32l4xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1f2]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[1f5]"></a>HAL_LTDC_DeInit</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_LTDC_DeInit &rArr; HAL_LTDC_MspDeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[1f8]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1f7]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_LTDC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
</UL>

<P><STRONG><a name="[1fb]"></a>HAL_LTDC_Init</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[1f9]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1f6]"></a>HAL_LTDC_MspDeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_LTDC_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_MspDeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
</UL>

<P><STRONG><a name="[1fc]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 122 bytes, Stack size 168 bytes, stm32l4xx_hal_msp.o(i.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[1fa]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1fd]"></a>HAL_LTDC_SetAddress</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32l4xx_hal_ltdc.o(i.HAL_LTDC_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_LTDC_SetAddress &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>

<P><STRONG><a name="[1ed]"></a>HAL_MspInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1e8]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_DeInit
</UL>

<P><STRONG><a name="[1c1]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ITConfig
</UL>

<P><STRONG><a name="[1c0]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ITConfig
</UL>

<P><STRONG><a name="[1eb]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1ff]"></a>HAL_OSPIM_Config</STRONG> (Thumb, 678 bytes, Stack size 80 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPIM_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_OSPIM_Config &rArr; OSPIM_GetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPIM_GetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[201]"></a>HAL_OSPI_AutoPolling</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_OSPI_AutoPolling &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMemory
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
</UL>

<P><STRONG><a name="[1b2]"></a>HAL_OSPI_Command</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_OSPI_Command &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_ConfigCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMemory
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPollingMemReady
</UL>

<P><STRONG><a name="[204]"></a>HAL_OSPI_DeInit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_OSPI_DeInit &rArr; HAL_OSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[206]"></a>HAL_OSPI_Init</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HAL_OSPI_Init &rArr; HAL_OSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[208]"></a>HAL_OSPI_MemoryMapped</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_MemoryMapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_OSPI_MemoryMapped &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[205]"></a>HAL_OSPI_MspDeInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_OSPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_OSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_DeInit
</UL>

<P><STRONG><a name="[207]"></a>HAL_OSPI_MspInit</STRONG> (Thumb, 242 bytes, Stack size 200 bytes, stm32l4xx_hal_msp.o(i.HAL_OSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HAL_OSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
</UL>

<P><STRONG><a name="[1b3]"></a>HAL_OSPI_Receive</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_OSPI_Receive &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPollingMemReady
</UL>

<P><STRONG><a name="[209]"></a>HAL_OSPI_Transmit</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, stm32l4xx_hal_ospi.o(i.HAL_OSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_OSPI_Transmit &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
</UL>

<P><STRONG><a name="[254]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1e9]"></a>HAL_PWREx_EnableVddIO2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableVddIO2))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[24f]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[255]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1cd]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1172 bytes, Stack size 40 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
</UL>

<P><STRONG><a name="[20c]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreqFromPLLSource
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1ee]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_RCC_GetOscConfig</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetOscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetOscConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
</UL>

<P><STRONG><a name="[1ef]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[20d]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[1cc]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1374 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[210]"></a>HAL_RTC_Init</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[211]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 60 bytes, Stack size 168 bytes, stm32l4xx_hal_msp.o(i.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[214]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>

<P><STRONG><a name="[1f0]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[215]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[1f1]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2f]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.I2C1_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C1_ER_IRQHandler &rArr; HAL_I2C_ER_IRQHandler &rArr; I2C_ITError &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.I2C1_EV_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>IdleTaskHook</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, touchgfxhal.o(i.IdleTaskHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IdleTaskHook &rArr; touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.vApplicationIdleHook)
</UL>
<P><STRONG><a name="[229]"></a>LCD_ReqTear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, touchgfxhal.o(i.LCD_ReqTear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_ReqTear &rArr; HAL_DSI_LongWrite &rArr; DSI_ConfigPacketHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>

<P><STRONG><a name="[1d4]"></a>LCD_SetUpdateRegion</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, touchgfxhal.o(i.LCD_SetUpdateRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_SetUpdateRegion &rArr; HAL_DSI_LongWrite &rArr; DSI_ConfigPacketHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
</UL>

<P><STRONG><a name="[8d]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.LTDC_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_ER_IRQHandler &rArr; HAL_LTDC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>LTDC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[22a]"></a>MFX_IO_DeInit</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, main.o(i.MFX_IO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MFX_IO_DeInit &rArr; HAL_I2C_DeInit &rArr; HAL_I2C_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_DeInit
</UL>

<P><STRONG><a name="[22b]"></a>MFX_IO_Delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.MFX_IO_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MFX_IO_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinType
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinPolarity
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Reset
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_ReadID
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Start
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_SetIrqTypeMode
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_SetIrqEvtMode
</UL>

<P><STRONG><a name="[22c]"></a>MFX_IO_EnableWakeupPin</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, main.o(i.MFX_IO_EnableWakeupPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MFX_IO_EnableWakeupPin &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_WakeUp
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_LowPower
</UL>

<P><STRONG><a name="[22d]"></a>MFX_IO_ITConfig</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, main.o(i.MFX_IO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MFX_IO_ITConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_EnableIT
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_EnableIT
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_EnableIT
</UL>

<P><STRONG><a name="[22e]"></a>MFX_IO_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.MFX_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MFX_IO_Init &rArr; HAL_I2C_IsDeviceReady &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_IsDeviceReady
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_ReadID
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Init
</UL>

<P><STRONG><a name="[22f]"></a>MFX_IO_Read</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, main.o(i.MFX_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinType
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinPolarity
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_ReadID
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Start
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_ReadPin
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_ITStatus
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_Start
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_GetITStatus
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_Config
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_ReadSrc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_ReadMsg
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_GetITStatus
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_EnableITSource
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_DisableITSource
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>

<P><STRONG><a name="[230]"></a>MFX_IO_ReadMultiple</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, main.o(i.MFX_IO_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MFX_IO_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_GetValue
</UL>

<P><STRONG><a name="[231]"></a>MFX_IO_Wakeup</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.MFX_IO_Wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MFX_IO_Wakeup &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_WakeUp
</UL>

<P><STRONG><a name="[233]"></a>MFX_IO_Write</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, main.o(i.MFX_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinType
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinPolarity
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Reset
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_LowPower
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Start
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_ClearIT
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_Start
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_Config
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_EnableITSource
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_DisableITSource
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_ClearGlobalIT
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>

<P><STRONG><a name="[24d]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(i.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[212]"></a>RTC_EnterInitMode</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[213]"></a>RTC_ExitInitMode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[be]"></a>StartDefaultTask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.StartDefaultTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = StartDefaultTask &rArr;  StartDefaultTask (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[36]"></a>SysTick_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cmsis_os2.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[253]"></a>SystemClock_Config</STRONG> (Thumb, 130 bytes, Stack size 96 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[216]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, stm32l4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[31f]"></a>TS_IO_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i.TS_IO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_I2C_InitializeIfRequired
</UL>

<P><STRONG><a name="[256]"></a>TS_IO_Read</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, stm32touchcontroller.o(i.TS_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TS_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::init()
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_DetectTouch
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_ReadID
</UL>

<P><STRONG><a name="[257]"></a>TS_IO_ReadMultiple</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, stm32touchcontroller.o(i.TS_IO_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TS_IO_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_GetXY
</UL>

<P><STRONG><a name="[258]"></a>TS_IO_Write</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, stm32touchcontroller.o(i.TS_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TS_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_Start
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_EnableIT
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_DisableIT
</UL>

<P><STRONG><a name="[bf]"></a>TouchGFX_Task</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(i.TouchGFX_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TouchGFX_Task &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[32]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l4r9xx.o(RESET)
</UL>
<P><STRONG><a name="[27b]"></a>TS_DetectState(TS_StateTypeDef*)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32touchcontroller.o(i._Z14TS_DetectStateP15TS_StateTypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TS_DetectState(TS_StateTypeDef*)
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[25a]"></a>getFont_verdana_10_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_verdana_10_4bpp_1.o(i._Z23getFont_verdana_10_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_verdana_10_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[25d]"></a>getFont_verdana_20_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_verdana_20_4bpp_1.o(i._Z23getFont_verdana_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_verdana_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[25e]"></a>getFont_verdana_40_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, table_verdana_40_4bpp_1.o(i._Z23getFont_verdana_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[e3]"></a>TouchGFXHAL::beginFrame()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c7]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[da]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c9]"></a>TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[db]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[e5]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TouchGFXHAL::setTFTFrameBuffer(unsigned short*) &rArr; HAL_LTDC_SetAddress &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Stop
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d9]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::configureInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[dc]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TouchGFXHAL::enableLCDControllerInterrupt() &rArr; LCD_ReqTear &rArr; HAL_DSI_LongWrite &rArr; DSI_ConfigPacketHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReqTear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[dd]"></a>TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[e4]"></a>TouchGFXHAL::endFrame()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[267]"></a>TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, touchgfxhal.o(i._ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[38f]"></a>TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, touchgfxhal.o(i._ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt), UNUSED)

<P><STRONG><a name="[bd]"></a>TouchGFXHAL::~TouchGFXHAL()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[390]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev), UNUSED)

<P><STRONG><a name="[269]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoWatchScreenNoTransition()
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[391]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[c1]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FrontendHeap::~FrontendHeap()
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
<LI> touchgfxconfiguration.o(i.touchgfx_init)
</UL>
<P><STRONG><a name="[392]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[ed]"></a>WatchViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN13WatchViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
</UL>
<P><STRONG><a name="[26e]"></a>WatchViewBase::WatchViewBase()</STRONG> (Thumb, 784 bytes, Stack size 120 bytes, watchviewbase.o(i._ZN13WatchViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = WatchViewBase::WatchViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::AnimationTextureMapper()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setAngles(float, float, float)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setScale(float)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::initializeTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setupSecondHand(unsigned short, short, short)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setupMinuteHand(unsigned short, short, short)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setupHourHand(unsigned short, short, short)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setBackground(unsigned short, short, short)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setAnimation(unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCamera(float, float)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setOrigo(float, float, float)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCameraDistance(float)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmapPosition(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchView::WatchView()
</UL>

<P><STRONG><a name="[393]"></a>WatchViewBase::WatchViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 120 bytes, watchviewbase.o(i._ZN13WatchViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[eb]"></a>WatchViewBase::~WatchViewBase()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN13WatchViewBaseD1Ev))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;WatchPresenter&rang;::~View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
</UL>
<P><STRONG><a name="[394]"></a>WatchViewBase::~WatchViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN13WatchViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[366]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase_1.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[365]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase_1.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[f6]"></a>WatchPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, watchpresenter.o(i._ZN14WatchPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> watchpresenter.o(.constdata__ZTV14WatchPresenter)
</UL>
<P><STRONG><a name="[f5]"></a>WatchPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, watchpresenter.o(i._ZN14WatchPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> watchpresenter.o(.constdata__ZTV14WatchPresenter)
</UL>
<P><STRONG><a name="[37e]"></a>WatchPresenter::WatchPresenter(WatchView&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, watchpresenter.o(i._ZN14WatchPresenterC1ER9WatchView))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[395]"></a>WatchPresenter::WatchPresenter__sub_object(WatchView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, watchpresenter.o(i._ZN14WatchPresenterC1ER9WatchView), UNUSED)

<P><STRONG><a name="[f7]"></a>WatchPresenter::~WatchPresenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, watchpresenter.o(i._ZN14WatchPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> watchpresenter.o(.constdata__ZTV14WatchPresenter)
</UL>
<P><STRONG><a name="[396]"></a>WatchPresenter::~WatchPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, watchpresenter.o(i._ZN14WatchPresenterD1Ev), UNUSED)

<P><STRONG><a name="[2cf]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase_1.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[2ce]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase_1.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[fc]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[26b]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[397]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[102]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = STM32TouchController::sampleTouch(int&, int&) &rArr; TS_DetectState(TS_StateTypeDef*)
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_DetectState(TS_StateTypeDef*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[101]"></a>STM32TouchController::init()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = STM32TouchController::init() &rArr; TS_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[b9]"></a>STM32TouchController::~STM32TouchController()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[398]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[260]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[262]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[cf]"></a>TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[bc]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> applicationfontprovider_1.o(.constdata__ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[399]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[26d]"></a>FrontendApplicationBase::gotoWatchScreenNoTransition()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase27gotoWatchScreenNoTransitionEv))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[c5]"></a>FrontendApplicationBase::gotoWatchScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase31gotoWatchScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = FrontendApplicationBase::gotoWatchScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; WatchView::WatchView() &rArr; WatchViewBase::WatchViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[27a]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[39a]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[104]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[39b]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[279]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[26c]"></a>Model::Model()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[39c]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[108]"></a>STM32DMA::initialize()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[105]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[10e]"></a>STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[10f]"></a>STM32DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[10a]"></a>STM32DMA::signalDMAInterrupt()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA18signalDMAInterruptEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[280]"></a>STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[281]"></a>STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[282]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32DMA::STM32DMA() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[39d]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev), UNUSED)

<P><STRONG><a name="[ba]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
<LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
</UL>
<P><STRONG><a name="[39e]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMAD1Ev), UNUSED)

<P><STRONG><a name="[285]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[1d2]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
</UL>

<P><STRONG><a name="[289]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[28b]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[28d]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[28f]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[290]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[13b]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::Transition::invalidate() &rArr; touchgfx::Application::invalidate() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[13c]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[13a]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[129]"></a>touchgfx::AnalogClock::updateClock()</STRONG> (Thumb, 586 bytes, Stack size 24 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock11updateClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AnalogClock::updateClock() &rArr; touchgfx::AnimationTextureMapper::startAnimation() &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::isTextureMapperAnimationRunning() const
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::cancelAnimationTextureMapperAnimation()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::startAnimation()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::setupAnimation(touchgfx::AnimationTextureMapper::AnimationParameter, float, unsigned short, unsigned short, short(*)(unsigned short, short, short, unsigned short))
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::updateZAngle(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[131]"></a>touchgfx::AnalogClock::setAnimation(unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock12setAnimationEtPFstsstE))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[12a]"></a>touchgfx::AnalogClock::setBackground(unsigned short, short, short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock13setBackgroundEtss))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AnalogClock::setBackground(unsigned short, short, short) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[12c]"></a>touchgfx::AnalogClock::setupHourHand(unsigned short, short, short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock13setupHourHandEtss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnalogClock::setupHourHand(unsigned short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[12d]"></a>touchgfx::AnalogClock::setupMinuteHand(unsigned short, short, short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock15setupMinuteHandEtss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnalogClock::setupMinuteHand(unsigned short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[12e]"></a>touchgfx::AnalogClock::setupSecondHand(unsigned short, short, short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock15setupSecondHandEtss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnalogClock::setupSecondHand(unsigned short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[12b]"></a>touchgfx::AnalogClock::setRotationCenter(short, short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock17setRotationCenterEss))
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[132]"></a>touchgfx::AnalogClock::initializeTime24Hour(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock20initializeTime24HourEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnalogClock::initializeTime24Hour(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[12f]"></a>touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock27setHourHandMinuteCorrectionEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentSecond() const
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour() const
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[130]"></a>touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock29setMinuteHandSecondCorrectionEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentSecond() const
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour() const
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[133]"></a>touchgfx::AnalogClock::setupHand(touchgfx::TextureMapper&, unsigned short, short, short)</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, analogclock.o(i._ZN8touchgfx11AnalogClock9setupHandERNS_13TextureMapperEtss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AnalogClock::setupHand(touchgfx::TextureMapper&, unsigned short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[273]"></a>touchgfx::AnalogClock::AnalogClock()</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, analogclock.o(i._ZN8touchgfx11AnalogClockC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::AnalogClock::AnalogClock() &rArr; touchgfx::AnimationTextureMapper::AnimationTextureMapper() &rArr; touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::AnimationTextureMapper()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::AbstractClock__sub_object()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::updateZAngle(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[39f]"></a>touchgfx::AnalogClock::AnalogClock__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, analogclock.o(i._ZN8touchgfx11AnalogClockC1Ev), UNUSED)

<P><STRONG><a name="[291]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::Application::invalidate() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
</UL>

<P><STRONG><a name="[27c]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::cancelAnimationTextureMapperAnimation()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::startAnimation()
</UL>

<P><STRONG><a name="[fb]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[296]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 1932 bytes, Stack size 72 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
</UL>

<P><STRONG><a name="[ff]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 1680 bytes, Stack size 144 bytes, application.o(i._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f9]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[103]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::handleTickEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[fe]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f8]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[fa]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[2b6]"></a>touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, application.o(i._ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::startAnimation()
</UL>

<P><STRONG><a name="[37d]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[2b7]"></a>touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::cancelAnimationTextureMapperAnimation()
</UL>

<P><STRONG><a name="[136]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[100]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[27e]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[3a0]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[367]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[138]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[137]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[3a1]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[128]"></a>touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[295]"></a>touchgfx::AbstractClock::AbstractClock__sub_object()</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx13AbstractClockC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
</UL>

<P><STRONG><a name="[106]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[110]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[111]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[10d]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2bf]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[10c]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[112]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[107]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[109]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DMA_Interface::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[25c]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 64 bytes, Stack size 64 bytes, generatedfont_1.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>

<P><STRONG><a name="[3a2]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, generatedfont_1.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[95]"></a>touchgfx::GeneratedFont::~GeneratedFont()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, generatedfont_1.o(i._ZN8touchgfx13GeneratedFontD1Ev))
<BR>[Address Reference Count : 4]<UL><LI> table_verdana_20_4bpp_1.o(i._Z23getFont_verdana_20_4bppv)
<LI> table_verdana_40_4bpp_1.o(i._Z23getFont_verdana_40_4bppv)
<LI> generatedfont_1.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> table_verdana_10_4bpp_1.o(i._Z23getFont_verdana_10_4bppv)
</UL>
<P><STRONG><a name="[3a3]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, generatedfont_1.o(i._ZN8touchgfx13GeneratedFontD1Ev), UNUSED)

<P><STRONG><a name="[149]"></a>touchgfx::TextureMapper::updateScale(float)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper11updateScaleEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextureMapper::updateScale(float)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[146]"></a>touchgfx::TextureMapper::updateAngles(float, float, float)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper12updateAnglesEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextureMapper::updateAngles(float, float, float)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[147]"></a>touchgfx::TextureMapper::updateZAngle(float)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx13TextureMapper12updateZAngleEf))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::updateClock()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[150]"></a>touchgfx::TextureMapper::setBitmapPosition(float, float)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setBitmapPosition(float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[151]"></a>touchgfx::TextureMapper::setBitmapPosition(int, int)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEii))
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[14e]"></a>touchgfx::TextureMapper::setCameraDistance(float)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx13TextureMapper17setCameraDistanceEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setCameraDistance(float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[2a0]"></a>touchgfx::TextureMapper::applyTransformation()</STRONG> (Thumb, 928 bytes, Stack size 1144 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper19applyTransformationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Point4&)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::Matrix4x4()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZTranslation(float)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYTranslation(float)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXTranslation(float)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZRotation(float)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYRotation(float)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXRotation(float)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZScale(float)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYScale(float)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXScale(float)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::setViewDistance(float)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setAngles(float, float, float)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setScale(float)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCamera(float, float)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setOrigo(float, float, float)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCameraDistance(float)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmapPosition(float, float)
</UL>

<P><STRONG><a name="[144]"></a>touchgfx::TextureMapper::setRenderingAlgorithm(touchgfx::TextureMapper::RenderingAlgorithm)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE))
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[14a]"></a>touchgfx::TextureMapper::setOrigo(float, float, float)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx13TextureMapper8setOrigoEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setOrigo(float, float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[148]"></a>touchgfx::TextureMapper::setScale(float)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper8setScaleEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setScale(float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[145]"></a>touchgfx::TextureMapper::setAngles(float, float, float)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper9setAnglesEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setAngles(float, float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[143]"></a>touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[14d]"></a>touchgfx::TextureMapper::setCamera(float, float)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx13TextureMapper9setCameraEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setCamera(float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[2b0]"></a>touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimationTextureMapper::AnimationTextureMapper()
</UL>

<P><STRONG><a name="[3a4]"></a>touchgfx::TextureMapper::TextureMapper__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[fd]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[96]"></a>touchgfx::EasingEquations::cubicEaseInOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchviewbase.o(i._ZN13WatchViewBaseC1Ev)
</UL>
<P><STRONG><a name="[99]"></a>touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(i._ZN8touchgfx11AnalogClockC1Ev)
</UL>
<P><STRONG><a name="[2b1]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseInOut(unsigned short, short, short, unsigned short)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[2b2]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[2b4]"></a>touchgfx::TouchCalibration::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[2b3]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 180 bytes, Stack size 44 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[2b5]"></a>touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 204 bytes, Stack size 52 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[26a]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[3a5]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[152]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[155]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[156]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[157]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[154]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[283]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[3a6]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[160]"></a>touchgfx::MCUInstrumentation::getCCConsumed()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv))
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[161]"></a>touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj))
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[29b]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[2d6]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[30f]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(float&, float&, const touchgfx::Rect&)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[29a]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[2c3]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[15a]"></a>touchgfx::AnimationTextureMapper::setupAnimation(touchgfx::AnimationTextureMapper::AnimationParameter, float, unsigned short, unsigned short, short(*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::AnimationTextureMapper::setupAnimation(touchgfx::AnimationTextureMapper::AnimationParameter, float, unsigned short, unsigned short, short(*)(unsigned short, short, short, unsigned short))
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::updateClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
</UL>
<P><STRONG><a name="[15b]"></a>touchgfx::AnimationTextureMapper::startAnimation()</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper14startAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnimationTextureMapper::startAnimation() &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::updateClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
</UL>
<P><STRONG><a name="[158]"></a>touchgfx::AnimationTextureMapper::handleTickEvent()</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AnimationTextureMapper::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
</UL>
<P><STRONG><a name="[15c]"></a>touchgfx::AnimationTextureMapper::cancelAnimationTextureMapperAnimation()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AnimationTextureMapper::cancelAnimationTextureMapperAnimation()
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(const touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::updateClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
</UL>
<P><STRONG><a name="[272]"></a>touchgfx::AnimationTextureMapper::AnimationTextureMapper()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapperC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AnimationTextureMapper::AnimationTextureMapper() &rArr; touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
</UL>

<P><STRONG><a name="[3a7]"></a>touchgfx::AnimationTextureMapper::AnimationTextureMapper__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, animationtexturemapper.o(i._ZN8touchgfx22AnimationTextureMapperC1Ev), UNUSED)

<P><STRONG><a name="[15e]"></a>touchgfx::CortexMMCUInstrumentation::getCPUCycles()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv))
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[15f]"></a>touchgfx::CortexMMCUInstrumentation::setMCUActive(bool)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::CortexMMCUInstrumentation::init()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentation4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[b8]"></a>touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentationD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> cortexmmcuinstrumentation.o(.constdata__ZTVN8touchgfx25CortexMMCUInstrumentationE)
<LI> touchgfxhal.o(i.__sti___15_TouchGFXHAL_cpp_c3b64dc6)
</UL>
<P><STRONG><a name="[3a8]"></a>touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cortexmmcuinstrumentation.o(i._ZN8touchgfx25CortexMMCUInstrumentationD1Ev), UNUSED)

<P><STRONG><a name="[2b8]"></a>touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, utils.o(i._ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[2bb]"></a>touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, utils.o(i._ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[270]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, watchviewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[3a9]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, watchviewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[ea]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[168]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d0]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[228]"></a>touchgfx::HAL::setMCUActive(bool)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IdleTaskHook
</UL>

<P><STRONG><a name="[e9]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d8]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cc]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d4]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 82 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[165]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1d3]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
</UL>

<P><STRONG><a name="[ca]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e1]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cd]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[29e]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[de]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2be]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[d7]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c6]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[df]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[167]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e8]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::performDisplayOrientationChange()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2c0]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>

<P><STRONG><a name="[e2]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e6]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e7]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d1]"></a>touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 192 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d3]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 72 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d2]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 46 bytes, Stack size 80 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d6]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 70 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d5]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 142 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[169]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cb]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[166]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e0]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[268]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[2f2]"></a>touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx3LCD14getAlphaFromA4EPKtj))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[193]"></a>touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 144 bytes, Stack size 136 bytes, lcd.o(i._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 448 bytes, Stack size 96 bytes, lcd.o(i._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[192]"></a>touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 932 bytes, Stack size 384 bytes, lcd.o(i._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gradients::Gradients(const touchgfx::Point3D*)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2f0]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx3LCD26DrawTextureMapScanLineBase29drawTextureMapNextSubdivisionERfS2_S2_S2_S2_S2_fS2_fS2_fiRiS3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2c9]"></a>touchgfx::Edge::step()</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx4Edge4stepEv))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[2c8]"></a>touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</STRONG> (Thumb, 548 bytes, Stack size 40 bytes, texturemaptypes.o(i._ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[3aa]"></a>touchgfx::Edge::Edge__sub_object(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, texturemaptypes.o(i._ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii), UNUSED)

<P><STRONG><a name="[2ca]"></a>touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO3getENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
</UL>

<P><STRONG><a name="[1d1]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
</UL>

<P><STRONG><a name="[25f]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GPIO::init() &rArr; touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[1c3]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_TearingEffectCallback
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_EndOfRefreshCallback
</UL>

<P><STRONG><a name="[2bd]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[298]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[9a]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(i._ZN8touchgfx11Application15drawCachedAreasEv)
<LI> application.o(i._ZN8touchgfx11ApplicationC1Ev)
</UL>
<P><STRONG><a name="[3ab]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[2dd]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[278]"></a>touchgfx::View&lang;WatchPresenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN8touchgfx4ViewI14WatchPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::~WatchViewBase()
</UL>

<P><STRONG><a name="[3ac]"></a>touchgfx::View&lang;WatchPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN8touchgfx4ViewI14WatchPresenterED1Ev), UNUSED)

<P><STRONG><a name="[275]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN8touchgfx5Color15getColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[16c]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setBackground(unsigned short, short, short)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[271]"></a>touchgfx::Image::Image(const touchgfx::Bitmap&)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, watchviewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[3ad]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, watchviewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[2cd]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, texts_1.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[2d1]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[2d0]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::clearCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[98]"></a>touchgfx::BlitOp::BlitOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx6BlitOpC1Ev))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(i._ZN8STM32DMAC1Ev)
</UL>
<P><STRONG><a name="[3ae]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx6BlitOpC1Ev), UNUSED)

<P><STRONG><a name="[9b]"></a>touchgfx::Point4::Point4()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx6Point4C1Ev))
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(i._ZN8touchgfx13TextureMapper19applyTransformationEv)
</UL>
<P><STRONG><a name="[3af]"></a>touchgfx::Point4::Point4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx6Point4C1Ev), UNUSED)

<P><STRONG><a name="[16e]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[37f]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[f4]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ef]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f1]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 260 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f3]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f0]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f2]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[277]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, watchviewbase.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[ec]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
<LI> watchviewbase.o(.constdata__ZTV13WatchViewBase)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[29d]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Screen::draw()
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[2d4]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 1012 bytes, Stack size 80 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[26f]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Screen::Screen()
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[3b0]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[16d]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[3b1]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[141]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 5]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[2bc]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, watchviewbase.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[274]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, watchviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>

<P><STRONG><a name="[142]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 6]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[122]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[123]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 8]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[120]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[121]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[11c]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[11d]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[276]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, watchviewbase.o(i._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>

<P><STRONG><a name="[11e]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[11f]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, analogclock.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[2c4]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[2c5]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[2c1]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[2c2]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[313]"></a>touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10div255_565Eth))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[314]"></a>touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10div255_888Ejh))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[190]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2d5]"></a>touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 498 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2d7]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 480 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2d8]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2d9]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 536 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[18d]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 960 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[312]"></a>touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18div255_565_FFcheckEth))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[2df]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 516 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2f4]"></a>touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2e0]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 574 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2f6]"></a>touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22bilinearInterpolate565Etttthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[315]"></a>touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22bilinearInterpolate888Ejjjjhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[27f]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[194]"></a>touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[171]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 784 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[9c]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3b2]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[172]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 762 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[9d]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3b3]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2e2]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[173]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 1002 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[9e]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3b4]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[174]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 982 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[9f]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3b5]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2e1]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2e4]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2e8]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2ea]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[175]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 618 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[a8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3b6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[2e6]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[176]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 370 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[a9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3b7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2ec]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[177]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 632 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[a2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3b8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[178]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 626 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[a4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3b9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[179]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 664 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[b0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3ba]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[2e3]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2e7]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[2e9]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[17a]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 742 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[a0]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3bb]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[17b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 374 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[a3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3bc]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[17c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 434 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[a5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3bd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[17d]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 678 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3be]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2ee]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[17e]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 768 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[b4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3bf]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[2e5]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[17f]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 720 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[a1]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3c0]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[180]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 672 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[a6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[3c1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[181]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 638 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[b5]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3c2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2eb]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[182]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 824 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[ac]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3c3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[183]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[ae]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3c4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[184]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 484 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3c5]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[185]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 724 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[a7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[3c6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[186]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 470 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[aa]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3c7]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[187]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 734 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[ad]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3c8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[188]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 816 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[af]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3c9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[189]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 484 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[b7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3ca]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[2ed]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[18a]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 462 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[ab]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3cb]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[18b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[b2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[3cc]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[18c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[b3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[3cd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[18e]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 492 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[31d]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[3ce]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev), UNUSED)

<P><STRONG><a name="[bb]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3cf]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[29f]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEtthhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[119]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[124]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[127]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 554 bytes, Stack size 160 bytes, container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[125]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::AnalogClock()
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[126]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[2c7]"></a>touchgfx::Gradients::Gradients(const touchgfx::Point3D*)</STRONG> (Thumb, 848 bytes, Stack size 32 bytes, texturemaptypes.o(i._ZN8touchgfx9GradientsC1EPKNS_7Point3DE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Gradients::Gradients(const touchgfx::Point3D*)
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[3d0]"></a>touchgfx::Gradients::Gradients__sub_object(const touchgfx::Point3D*)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, texturemaptypes.o(i._ZN8touchgfx9GradientsC1EPKNS_7Point3DE), UNUSED)

<P><STRONG><a name="[2ae]"></a>touchgfx::Matrix4x4::setViewDistance(float)</STRONG> (Thumb, 82 bytes, Stack size 96 bytes, math3d.o(i._ZN8touchgfx9Matrix4x415setViewDistanceEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Matrix4x4::setViewDistance(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2aa]"></a>touchgfx::Matrix4x4::concatenateXScale(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x417concatenateXScaleEf))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2ab]"></a>touchgfx::Matrix4x4::concatenateYScale(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x417concatenateYScaleEf))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2ac]"></a>touchgfx::Matrix4x4::concatenateZScale(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x417concatenateZScaleEf))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a7]"></a>touchgfx::Matrix4x4::concatenateXRotation(float)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, math3d.o(i._ZN8touchgfx9Matrix4x420concatenateXRotationEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Matrix4x4::concatenateXRotation(float) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a8]"></a>touchgfx::Matrix4x4::concatenateYRotation(float)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, math3d.o(i._ZN8touchgfx9Matrix4x420concatenateYRotationEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Matrix4x4::concatenateYRotation(float) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a9]"></a>touchgfx::Matrix4x4::concatenateZRotation(float)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, math3d.o(i._ZN8touchgfx9Matrix4x420concatenateZRotationEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Matrix4x4::concatenateZRotation(float) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a4]"></a>touchgfx::Matrix4x4::concatenateXTranslation(float)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x423concatenateXTranslationEf))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a5]"></a>touchgfx::Matrix4x4::concatenateYTranslation(float)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x423concatenateYTranslationEf))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a6]"></a>touchgfx::Matrix4x4::concatenateZTranslation(float)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x423concatenateZTranslationEf))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2a3]"></a>touchgfx::Matrix4x4::Matrix4x4()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x4C1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[3d1]"></a>touchgfx::Matrix4x4::Matrix4x4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x4C1Ev), UNUSED)

<P><STRONG><a name="[2af]"></a>touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Point4&)</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, math3d.o(i._ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Point4&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2ad]"></a>touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)</STRONG> (Thumb, 196 bytes, Stack size 176 bytes, math3d.o(i._ZN8touchgfxmlERKNS_9Matrix4x4ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[114]"></a>WatchView::setupScreen()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, watchview.o(i._ZN9WatchView11setupScreenEv))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
</UL>
<P><STRONG><a name="[115]"></a>WatchView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, watchview.o(i._ZN9WatchView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
</UL>
<P><STRONG><a name="[30a]"></a>WatchView::WatchView()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, watchview.o(i._ZN9WatchViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = WatchView::WatchView() &rArr; WatchViewBase::WatchViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchViewBase::WatchViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[3d2]"></a>WatchView::WatchView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, watchview.o(i._ZN9WatchViewC1Ev), UNUSED)

<P><STRONG><a name="[113]"></a>WatchView::~WatchView()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, watchview.o(i._ZN9WatchViewD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> watchview.o(.constdata__ZTV9WatchView)
</UL>
<P><STRONG><a name="[3d3]"></a>WatchView::~WatchView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, watchview.o(i._ZN9WatchViewD1Ev), UNUSED)

<P><STRONG><a name="[ce]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[135]"></a>touchgfx::AnalogClock::animationEnabled() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, analogclock.o(i._ZNK8touchgfx11AnalogClock16animationEnabledEv))
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[134]"></a>touchgfx::AnalogClock::convertHandValueToAngle(unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, analogclock.o(i._ZNK8touchgfx11AnalogClock23convertHandValueToAngleEhhh))
<BR>[Address Reference Count : 1]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
</UL>
<P><STRONG><a name="[294]"></a>touchgfx::AbstractClock::getCurrentHour() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock14getCurrentHourEv))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)
</UL>

<P><STRONG><a name="[293]"></a>touchgfx::AbstractClock::getCurrentMinute() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentMinuteEv))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)
</UL>

<P><STRONG><a name="[292]"></a>touchgfx::AbstractClock::getCurrentSecond() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentSecondEv))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setMinuteHandSecondCorrection(bool)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::setHourHandMinuteCorrection(bool)
</UL>

<P><STRONG><a name="[13f]"></a>touchgfx::TextureMapper::getSolidRect() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper12getSolidRectEv))
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[30b]"></a>touchgfx::TextureMapper::getBoundingRect() const</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper15getBoundingRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::TextureMapper::getBoundingRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceilf
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::invalidateContent() const
</UL>

<P><STRONG><a name="[14f]"></a>touchgfx::TextureMapper::getCameraDistance() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper17getCameraDistanceEv))
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[140]"></a>touchgfx::TextureMapper::invalidateContent() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::TextureMapper::invalidateContent() const &rArr; touchgfx::TextureMapper::getBoundingRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::getBoundingRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[13e]"></a>touchgfx::TextureMapper::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 574 bytes, Stack size 152 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = touchgfx::TextureMapper::draw(const touchgfx::Rect&) const &rArr; touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const &rArr; touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[30e]"></a>touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const</STRONG> (Thumb, 806 bytes, Stack size 264 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const &rArr; touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(float&, float&, const touchgfx::Rect&)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[14b]"></a>touchgfx::TextureMapper::getOrigoX() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper9getOrigoXEv))
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[14c]"></a>touchgfx::TextureMapper::getOrigoY() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZNK8touchgfx13TextureMapper9getOrigoYEv))
<BR>[Address Reference Count : 2]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[159]"></a>touchgfx::AnimationTextureMapper::isTextureMapperAnimationRunning() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animationtexturemapper.o(i._ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnalogClock::updateClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[162]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[2c6]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>

<P><STRONG><a name="[310]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::is1x1Inside(int, int, int, int) const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx3LCD26DrawTextureMapScanLineBase11is1x1InsideEiiii))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>

<P><STRONG><a name="[311]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::is2x2Inside(int, int, int, int) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx3LCD26DrawTextureMapScanLineBase11is2x2InsideEiiii))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>

<P><STRONG><a name="[2d3]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, container.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
</UL>

<P><STRONG><a name="[16b]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, image.o(i._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[16a]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 324 bytes, Stack size 64 bytes, image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[2db]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getExtraData() const
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2dc]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2ba]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2da]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getData() const
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2a1]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::draw(const touchgfx::Rect&) const
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2b9]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2a2]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::draw(const touchgfx::Rect&) const
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[11a]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[118]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[2d2]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>

<P><STRONG><a name="[11b]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 9]<UL><LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> animationtexturemapper.o(.constdata__ZTVN8touchgfx22AnimationTextureMapperE)
<LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[2de]"></a>touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKjRKNS_4RectES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[2ef]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1627overrunCheckNearestNeighborERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::is1x1Inside(int, int, int, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f1]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1633overrunCheckBilinearInterpolationERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::is2x2Inside(int, int, int, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f3]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 340 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f5]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 300 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 268 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fa]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 372 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fb]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 420 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fc]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 382 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fd]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 330 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fe]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 378 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2ff]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[300]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 388 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[301]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 342 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[302]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[303]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 354 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[304]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 338 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[305]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 386 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[306]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 308 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[307]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 342 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[117]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[116]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> analogclock.o(.constdata__ZTVN8touchgfx11AnalogClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
</UL>
<P><STRONG><a name="[297]"></a>__ARM_common_memcpy4_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i.__ARM_common_memcpy4_8))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[31b]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[284]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[25b]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[13d]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 7]<UL><LI> texts_1.o(.constdata__ZTVN8touchgfx4FontE)
<LI> watchviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[30d]"></a>__hardfp_ceilf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ceilf.o(i.__hardfp_ceilf))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::getBoundingRect() const
</UL>

<P><STRONG><a name="[3d4]"></a>__mathlib_ceilf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ceilf.o(i.__hardfp_ceilf), UNUSED)

<P><STRONG><a name="[309]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZRotation(float)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYRotation(float)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXRotation(float)
</UL>

<P><STRONG><a name="[30c]"></a>__hardfp_floorf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, floorf.o(i.__hardfp_floorf))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::getBoundingRect() const
</UL>

<P><STRONG><a name="[308]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZRotation(float)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYRotation(float)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXRotation(float)
</UL>

<P><STRONG><a name="[31a]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[319]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[31c]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[317]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[3d5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3d6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3d7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[318]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[1ae]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[23]"></a>ft3x67_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ft3x67.o(i.ft3x67_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ft3x67_Init &rArr; ft3x67_I2C_InitializeIfRequired
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>ft3x67_ReadID</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ft3x67.o(i.ft3x67_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ft3x67_ReadID &rArr; TS_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>ft3x67_Reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft3x67.o(i.ft3x67_Reset))
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>ft3x67_TS_ClearIT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft3x67.o(i.ft3x67_TS_ClearIT))
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>ft3x67_TS_DetectTouch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ft3x67.o(i.ft3x67_TS_DetectTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ft3x67_TS_DetectTouch &rArr; TS_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>ft3x67_TS_DisableIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ft3x67.o(i.ft3x67_TS_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ft3x67_TS_DisableIT &rArr; TS_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>ft3x67_TS_EnableIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ft3x67.o(i.ft3x67_TS_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ft3x67_TS_EnableIT &rArr; TS_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>ft3x67_TS_GetXY</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ft3x67.o(i.ft3x67_TS_GetXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ft3x67_TS_GetXY &rArr; TS_IO_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_ReadMultiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>ft3x67_TS_ITStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ft3x67.o(i.ft3x67_TS_ITStatus))
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>ft3x67_TS_Start</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ft3x67.o(i.ft3x67_TS_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ft3x67_TS_Start &rArr; TS_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_TS_DisableIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft3x67.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>main</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = main &rArr; MX_DSIHOST_DSI_Init &rArr; HAL_DSI_Init &rArr; HAL_DSI_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GFXMMU_Init
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1ac]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[323]"></a>mfxstm32l152_ClearGlobalIT</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_ClearGlobalIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mfxstm32l152_ClearGlobalIT &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_ClearIT
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_ClearIT
</UL>

<P><STRONG><a name="[13]"></a>mfxstm32l152_DeInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mfxstm32l152_DeInit &rArr; MFX_IO_DeInit &rArr; HAL_I2C_DeInit &rArr; HAL_I2C_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[324]"></a>mfxstm32l152_DisableITSource</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_DisableITSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_DisableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_DisableIT
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_DisableIT
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_DisableIT
</UL>

<P><STRONG><a name="[325]"></a>mfxstm32l152_EnableITSource</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_EnableITSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_EnableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_EnableIT
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IDD_EnableIT
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Error_EnableIT
</UL>

<P><STRONG><a name="[1e]"></a>mfxstm32l152_Error_ClearIT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_Error_ClearIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mfxstm32l152_Error_ClearIT &rArr; mfxstm32l152_ClearGlobalIT &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_ClearGlobalIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>mfxstm32l152_Error_DisableIT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_Error_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_Error_DisableIT &rArr; mfxstm32l152_DisableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_DisableITSource
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>mfxstm32l152_Error_EnableIT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_Error_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mfxstm32l152_Error_EnableIT &rArr; mfxstm32l152_EnableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ITConfig
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_EnableITSource
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>mfxstm32l152_Error_GetITStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_Error_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mfxstm32l152_Error_GetITStatus &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>mfxstm32l152_Error_ReadMsg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_Error_ReadMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mfxstm32l152_Error_ReadMsg &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>mfxstm32l152_Error_ReadSrc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_Error_ReadSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mfxstm32l152_Error_ReadSrc &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>mfxstm32l152_IDD_ClearIT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_ClearIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mfxstm32l152_IDD_ClearIT &rArr; mfxstm32l152_ClearGlobalIT &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_ClearGlobalIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>mfxstm32l152_IDD_Config</STRONG> (Thumb, 374 bytes, Stack size 40 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mfxstm32l152_IDD_Config &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>mfxstm32l152_IDD_DisableIT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_IDD_DisableIT &rArr; mfxstm32l152_DisableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_DisableITSource
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>mfxstm32l152_IDD_EnableIT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mfxstm32l152_IDD_EnableIT &rArr; mfxstm32l152_EnableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ITConfig
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_EnableITSource
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>mfxstm32l152_IDD_GetITStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mfxstm32l152_IDD_GetITStatus &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>mfxstm32l152_IDD_GetValue</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mfxstm32l152_IDD_GetValue &rArr; MFX_IO_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ReadMultiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>mfxstm32l152_IDD_Start</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_IDD_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mfxstm32l152_IDD_Start &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>mfxstm32l152_IO_ClearIT</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_ClearIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_IO_ClearIT &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>mfxstm32l152_IO_Config</STRONG> (Thumb, 632 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = mfxstm32l152_IO_Config &rArr; mfxstm32l152_IO_SetIrqTypeMode &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_SetIrqTypeMode
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_SetIrqEvtMode
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_InitPin
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_EnablePinIT
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_EnableIT
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_DisablePinIT
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>mfxstm32l152_IO_DisableIT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_IO_DisableIT &rArr; mfxstm32l152_DisableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_DisableITSource
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[326]"></a>mfxstm32l152_IO_DisablePinIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_DisablePinIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mfxstm32l152_IO_DisablePinIT &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>

<P><STRONG><a name="[f]"></a>mfxstm32l152_IO_EnableIT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mfxstm32l152_IO_EnableIT &rArr; mfxstm32l152_EnableITSource &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_ITConfig
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_EnableITSource
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[32a]"></a>mfxstm32l152_IO_EnablePinIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_EnablePinIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mfxstm32l152_IO_EnablePinIT &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>

<P><STRONG><a name="[11]"></a>mfxstm32l152_IO_ITStatus</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_ITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_IO_ITStatus &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[328]"></a>mfxstm32l152_IO_InitPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_InitPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mfxstm32l152_IO_InitPin &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>

<P><STRONG><a name="[e]"></a>mfxstm32l152_IO_ReadPin</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_IO_ReadPin &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[32b]"></a>mfxstm32l152_IO_SetIrqEvtMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_SetIrqEvtMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mfxstm32l152_IO_SetIrqEvtMode &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>

<P><STRONG><a name="[329]"></a>mfxstm32l152_IO_SetIrqTypeMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_SetIrqTypeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mfxstm32l152_IO_SetIrqTypeMode &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>

<P><STRONG><a name="[b]"></a>mfxstm32l152_IO_Start</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_IO_Start &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>mfxstm32l152_IO_WritePin</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_IO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mfxstm32l152_IO_WritePin &rArr; mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_reg24_setPinValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>mfxstm32l152_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mfxstm32l152_Init &rArr; mfxstm32l152_SetIrqOutPinType &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Init
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinType
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_SetIrqOutPinPolarity
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_GetInstance
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mfxstm32l152.o(.data)
<LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>mfxstm32l152_LowPower</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_LowPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mfxstm32l152_LowPower &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_EnableWakeupPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>mfxstm32l152_ReadID</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mfxstm32l152_ReadID &rArr; MFX_IO_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mfxstm32l152.o(.data)
<LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>mfxstm32l152_Reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mfxstm32l152_Reset &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mfxstm32l152.o(.data)
<LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[32d]"></a>mfxstm32l152_SetIrqOutPinPolarity</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_SetIrqOutPinPolarity))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_SetIrqOutPinPolarity &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Init
</UL>

<P><STRONG><a name="[32e]"></a>mfxstm32l152_SetIrqOutPinType</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mfxstm32l152.o(i.mfxstm32l152_SetIrqOutPinType))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mfxstm32l152_SetIrqOutPinType &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Init
</UL>

<P><STRONG><a name="[15]"></a>mfxstm32l152_WakeUp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mfxstm32l152.o(i.mfxstm32l152_WakeUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mfxstm32l152_WakeUp &rArr; MFX_IO_EnableWakeupPin &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Wakeup
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_EnableWakeupPin
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_GetInstance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mfxstm32l152.o(.data)
</UL>
<P><STRONG><a name="[250]"></a>osDelay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cmsis_os2.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
</UL>

<P><STRONG><a name="[320]"></a>osKernelInitialize</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cmsis_os2.o(i.osKernelInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[322]"></a>osKernelStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, cmsis_os2.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28a]"></a>osMessageQueueGet</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[287]"></a>osMessageQueueNew</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[288]"></a>osMessageQueuePut</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[28e]"></a>osSemaphoreAcquire</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[286]"></a>osSemaphoreNew</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[28c]"></a>osSemaphoreRelease</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os2.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[321]"></a>osThreadNew</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, cmsis_os2.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[362]"></a>pvPortMalloc</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[379]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[353]"></a>pxPortInitialiseStack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[24e]"></a>touchgfx_init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[259]"></a>touchgfx_taskEntry</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFX_Task
</UL>

<P><STRONG><a name="[340]"></a>uxListRemove</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[36f]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetIdleTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[37c]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetTimerTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[34e]"></a>vApplicationIdleHook</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, freertos.o(i.vApplicationIdleHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vApplicationIdleHook &rArr; vTaskSetApplicationTaskTag
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[345]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[352]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[342]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[341]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[344]"></a>vPortEnterCritical</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[346]"></a>vPortExitCritical</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[34d]"></a>vPortFree</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[373]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[369]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[335]"></a>vQueueAddToRegistry</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[33a]"></a>vQueueDelete</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[36b]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[35c]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[32f]"></a>vTaskDelay</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[377]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[361]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[36d]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[36c]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[36e]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[368]"></a>vTaskSetApplicationTaskTag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tasks.o(i.vTaskSetApplicationTaskTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSetApplicationTaskTag
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
</UL>

<P><STRONG><a name="[330]"></a>vTaskStartScheduler</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCallApplicationTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[35a]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[1a7]"></a>vTaskSwitchContext</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCallApplicationTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[372]"></a>xPortStartScheduler</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[252]"></a>xPortSysTickHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[33b]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[339]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphoreStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[334]"></a>xQueueGenericCreate</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[333]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[350]"></a>xQueueGenericReset</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[337]"></a>xQueueGenericSend</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[336]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[33c]"></a>xQueueGiveFromISR</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[332]"></a>xQueueReceive</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, queue.o(i.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[331]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[338]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, queue.o(i.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[371]"></a>xTaskCallApplicationTaskHook</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.xTaskCallApplicationTaskHook))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[378]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[33e]"></a>xTaskCreate</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[33d]"></a>xTaskCreateStatic</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, tasks.o(i.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[251]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[35d]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[376]"></a>xTaskIncrementTick</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[34b]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[37a]"></a>xTaskPriorityInherit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[360]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[35b]"></a>xTaskResumeAll</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[370]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[358]"></a>xTimerGenericCommand</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[27d]"></a>T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI9WatchView14WatchPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488<LI>Call Chain = T2* touchgfx::makeTransition&lang;WatchView, WatchPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; WatchView::WatchView() &rArr; WatchViewBase::WatchViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchPresenter::WatchPresenter(WatchView&)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchView::WatchView()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoWatchScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[299]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[16f]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[196]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI14WatchPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[198]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[199]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;WatchView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI9WatchViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[19a]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[19b]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::NoTransition, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[261]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, touchgfxhal.o(i._Z16__NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[263]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, touchgfxhal.o(i._Z17__NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[266]"></a>__NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, touchgfxhal.o(i._Z18__NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[19c]"></a>__sti___15_TouchGFXHAL_cpp_c3b64dc6</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, touchgfxhal.o(i.__sti___15_TouchGFXHAL_cpp_c3b64dc6))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __sti___15_TouchGFXHAL_cpp_c3b64dc6 &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.init_array)
</UL>
<P><STRONG><a name="[19d]"></a>__sti___25_TouchGFXConfiguration_cpp_f5abfd34</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __sti___25_TouchGFXConfiguration_cpp_f5abfd34 &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[97]"></a>DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32dma.o(i._Z22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(i._ZN8STM32DMA10initializeEv)
</UL>
<P><STRONG><a name="[1b0]"></a>AutoPollingMemReady</STRONG> (Thumb, 128 bytes, Stack size 104 bytes, main.o(i.AutoPollingMemReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = AutoPollingMemReady &rArr; HAL_OSPI_Receive &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
</UL>

<P><STRONG><a name="[234]"></a>MX_DMA2D_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[236]"></a>MX_DSIHOST_DSI_Init</STRONG> (Thumb, 2474 bytes, Stack size 224 bytes, main.o(i.MX_DSIHOST_DSI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = MX_DSIHOST_DSI_Init &rArr; HAL_DSI_Init &rArr; HAL_DSI_MspInit &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_SetLowPowerRXFilter
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_SetGenericVCID
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigPhyTimer
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigHostTimeouts
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigFlowControl
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigErrorMonitor
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigCommand
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigAdaptedCommandMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IO_WritePin
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IO_Init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IO_ConfigPin
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[241]"></a>MX_GFXMMU_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, main.o(i.MX_GFXMMU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MX_GFXMMU_Init &rArr; HAL_GFXMMU_Init &rArr; HAL_GFXMMU_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GFXMMU_Init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GFXMMU_DisableLutLines
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GFXMMU_ConfigLut
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[244]"></a>MX_GPIO_Init</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245]"></a>MX_I2C1_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.MX_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = MX_I2C1_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[248]"></a>MX_LTDC_Init</STRONG> (Thumb, 168 bytes, Stack size 64 bytes, main.o(i.MX_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[249]"></a>MX_OCTOSPI1_Init</STRONG> (Thumb, 262 bytes, Stack size 128 bytes, main.o(i.MX_OCTOSPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = MX_OCTOSPI1_Init &rArr; OctalMode &rArr; WriteEnable &rArr; HAL_OSPI_Receive &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MemoryMapped
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_DeInit
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPIM_Config
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetMemory
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24b]"></a>OctalMode</STRONG> (Thumb, 614 bytes, Stack size 152 bytes, main.o(i.OctalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = OctalMode &rArr; WriteEnable &rArr; HAL_OSPI_Receive &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Transmit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[24a]"></a>ResetMemory</STRONG> (Thumb, 126 bytes, Stack size 120 bytes, main.o(i.ResetMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ResetMemory &rArr; HAL_OSPI_AutoPolling &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[24c]"></a>WriteEnable</STRONG> (Thumb, 152 bytes, Stack size 112 bytes, main.o(i.WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WriteEnable &rArr; HAL_OSPI_Receive &rArr; OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctalMode
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[32c]"></a>mfxstm32l152_GetInstance</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mfxstm32l152.o(i.mfxstm32l152_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_WakeUp
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_Init
</UL>

<P><STRONG><a name="[327]"></a>mfxstm32l152_reg24_setPinValue</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, mfxstm32l152.o(i.mfxstm32l152_reg24_setPinValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mfxstm32l152_reg24_setPinValue &rArr; MFX_IO_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFX_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_WritePin
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_SetIrqTypeMode
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_SetIrqEvtMode
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_InitPin
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_EnablePinIT
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_DisablePinIT
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfxstm32l152_IO_Config
</UL>

<P><STRONG><a name="[31e]"></a>ft3x67_I2C_InitializeIfRequired</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ft3x67.o(i.ft3x67_I2C_InitializeIfRequired))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ft3x67_I2C_InitializeIfRequired
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_ReadID
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft3x67_Init
</UL>

<P><STRONG><a name="[93]"></a>I2C_DMAAbort</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_DMAAbort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DMAAbort &rArr; I2C_TreatErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TreatErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_i2c.o(i.I2C_ITError)
</UL>
<P><STRONG><a name="[21b]"></a>I2C_Disable_IRQ</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.I2C_Disable_IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Disable_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveSeqCplt
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITListenCplt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITAddrCplt
</UL>

<P><STRONG><a name="[221]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
</UL>

<P><STRONG><a name="[219]"></a>I2C_ITAddrCplt</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_ITAddrCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_ITAddrCplt &rArr; I2C_Disable_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_AddrCallback
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Disable_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
</UL>

<P><STRONG><a name="[1db]"></a>I2C_ITError</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_ITError))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_ITError &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TreatErrorCallback
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Disable_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_ER_IRQHandler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
</UL>

<P><STRONG><a name="[21e]"></a>I2C_ITListenCplt</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_ITListenCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_ITListenCplt &rArr; I2C_Disable_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_ListenCpltCallback
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Disable_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
</UL>

<P><STRONG><a name="[220]"></a>I2C_ITSlaveCplt</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_ITSlaveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_ITSlaveCplt &rArr; I2C_ITSlaveSeqCplt &rArr; I2C_Disable_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_SlaveTxCpltCallback
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_SlaveRxCpltCallback
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_ListenCpltCallback
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveSeqCplt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITListenCplt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Disable_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
</UL>

<P><STRONG><a name="[222]"></a>I2C_ITSlaveSeqCplt</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_ITSlaveSeqCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_ITSlaveSeqCplt &rArr; I2C_Disable_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_SlaveTxCpltCallback
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_SlaveRxCpltCallback
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Disable_IRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
</UL>

<P><STRONG><a name="[225]"></a>I2C_IsErrorOccurred</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_IsErrorOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[1e1]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[1e5]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[94]"></a>I2C_Slave_ISR_IT</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_Slave_ISR_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_Slave_ISR_IT &rArr; I2C_ITSlaveCplt &rArr; I2C_ITSlaveSeqCplt &rArr; I2C_Disable_IRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveSeqCplt
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveCplt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITListenCplt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITAddrCplt
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_i2c.o(i.I2C_ITError)
</UL>
<P><STRONG><a name="[1e2]"></a>I2C_TransferConfig</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[218]"></a>I2C_TreatErrorCallback</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.I2C_TreatErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_TreatErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_ErrorCallback
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_AbortCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMAAbort
</UL>

<P><STRONG><a name="[1df]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_IsDeviceReady
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[1e3]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[1e6]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[20e]"></a>RCC_GetSysClockFreqFromPLLSource</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.RCC_GetSysClockFreqFromPLLSource))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[20f]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[20a]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[20b]"></a>RCCEx_PLLSAI2_Config</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1fe]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1c9]"></a>DSI_ConfigPacketHeader</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l4xx_hal_dsi.o(i.DSI_ConfigPacketHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DSI_ConfigPacketHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
</UL>

<P><STRONG><a name="[1b7]"></a>DSI_ShortWrite</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, stm32l4xx_hal_dsi.o(i.DSI_ShortWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DSI_ShortWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
</UL>

<P><STRONG><a name="[1f4]"></a>LTDC_SetConfig</STRONG> (Thumb, 354 bytes, Stack size 20 bytes, stm32l4xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[200]"></a>OSPIM_GetConfig</STRONG> (Thumb, 194 bytes, Stack size 20 bytes, stm32l4xx_hal_ospi.o(i.OSPIM_GetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OSPIM_GetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPIM_Config
</UL>

<P><STRONG><a name="[203]"></a>OSPI_ConfigCmd</STRONG> (Thumb, 410 bytes, Stack size 20 bytes, stm32l4xx_hal_ospi.o(i.OSPI_ConfigCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OSPI_ConfigCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
</UL>

<P><STRONG><a name="[202]"></a>OSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32l4xx_hal_ospi.o(i.OSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Transmit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MemoryMapped
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
</UL>

<P><STRONG><a name="[348]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[34a]"></a>prvCopyDataToQueue</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[34f]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[355]"></a>prvIsQueueEmpty</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[35f]"></a>prvUnlockQueue</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[33f]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[343]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvAddNewTaskToReadyList
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[34c]"></a>prvDeleteTCB</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[c3]"></a>prvIdleTask</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[351]"></a>prvInitialiseNewTask</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[37b]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[347]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[354]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[356]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[359]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[357]"></a>prvSampleTimeNow</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[35e]"></a>prvSwitchTimerLists</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[c4]"></a>prvTimerTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[363]"></a>prvHeapInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[364]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[c0]"></a>prvTaskExitError</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[19e]"></a>__sti___21_TypedTextDatabase_cpp_05ec7672</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, typedtextdatabase_1.o(i.__sti___21_TypedTextDatabase_cpp_05ec7672))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = __sti___21_TypedTextDatabase_cpp_05ec7672 &rArr; getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_10_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase_1.o(.init_array)
</UL>
<P><STRONG><a name="[19f]"></a>__sti___15_Application_cpp_63cd8d44</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application.o(i.__sti___15_Application_cpp_63cd8d44))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[1a0]"></a>__sti___7_LCD_cpp_86507772</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.__sti___7_LCD_cpp_86507772))
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
